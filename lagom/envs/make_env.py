import gym
from gym.wrappers import Monitor

from lagom import Seeder
from .gym_env import GymEnv

from functools import partial  # very useful to make functions with different settings but without arguments


def make_gym_env(env_id, seed, monitor=False, monitor_dir=None):
    """
    Create a gym environment, wrap it with GymEnv and seed it. 
    
    Args:
        env_id (str): environment ID, e.g. 'Pendulum-v0'
        seed (int): random seed
        monitor (bool, optional): Whether to wrap the environment with Monitor for video recording. 
        monitor_dir (str, optional): directory to save all data from Monitor. 
        
    Returns:
        env (GymEnv): created environment
    """
    # Create gym environment
    env = gym.make(env_id)
    # Wrap the enviroment with Monitor if required
    if monitor:
        env = Monitor(env, monitor_dir)
    # Wrap the environment with GymEnv
    env = GymEnv(env)
    # Seed the environment
    env.seed(seed)
    
    return env
    
def make_envs(make_env, env_id, num_env, init_seed, **kwargs):
    """
    Create a list of argument-free make_env() given the settings. 
    
    Each make_env function in the list uses different random seeds generated by Seeder. 
    
    Args:
        make_env (function): A function to create an environment
        env_id (str): environment ID, e.g. 'Pendulum-v0'. 
        num_env (int): Number of environments to create. 
        init_seed (int): Initial seed for Seeder to sample random seeds. 
        **kwargs: keyword aguments used to specify other options for make_env. 
        
    Returns:
        list_make_env (list): A list of argument-free make_env() functions, each with different random
            seed. 
    """
    # Generate different seeds for each environment
    seeder = Seeder(init_seed=init_seed)
    seeds = seeder(size=num_env)
    
    # Use partial to generate a list of argument-free make_env, each with different seed
    list_make_env = [partial(make_env, env_id=env_id, seed=seed, **kwargs) for seed in seeds]
    
    return list_make_env
